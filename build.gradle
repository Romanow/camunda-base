plugins {
    id "idea"
    id "java-library"
    id "org.springframework.boot" version "3.1.10"
    id "io.spring.dependency-management" version "1.1.4"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceCompatibility = "17"
targetCompatibility = "17"

ext {
    springBootVersion = "3.1.10"
    camundaVersion = "7.20.0"
    groovyVersion = "4.0.20"
    testCntainerVersion = "1.19.6"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:$camundaVersion"
    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:$camundaVersion"

    implementation "org.postgresql:postgresql"
    implementation "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "org.apache.groovy:groovy-jsr223:$groovyVersion"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:postgresql:$testCntainerVersion"
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}.jar"
}
