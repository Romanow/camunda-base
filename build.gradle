plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.25"
    id "org.springframework.boot" version "3.3.3"
    id "io.spring.dependency-management" version "1.1.6"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.1"
}

ext {
    kotlinVersion = "1.9.25"
    springBootVersion = "3.3.3"
    camundaVersion = "7.21.0"
    groovyVersion = "4.0.23"
    testCntainerVersion = "1.20.1"
}


idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

ktlint {
    version.set("1.1.1")
}

repositories {
    mavenCentral()
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:$camundaVersion"
    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:$camundaVersion"

    implementation "org.postgresql:postgresql"
    implementation "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "org.apache.groovy:groovy-jsr223:$groovyVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:postgresql:$testCntainerVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}
